name: Rebuild CI Container (Apply VIPC)

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
    workflow_call:
        inputs:
            labview-version:
                required: false
                default: 2024
                type: string
            labview-bitness:
                required: false
                default: 64
                type: string
            vipc_timeout_ms:
                required: false
                default: 600
                type: string
            source_vipc:
                required: false
                default: source/.vipc
                type: string
            dev_vipc:
                required: false
                default: dev.vipc
                type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on:
      - ubuntu-latest

    env:
        DOCKERFILE: .github/workflows/ci.dockerfile
        DOCKERFILE_DIR: .dockerfile

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # with:
        #   submodules: recursive
        #   token: ${{ secrets.REPO_PAT }}

      - name: Checkout Dockerfile
        uses: actions/checkout@v4
        with:
            repository: 'vipm-io/OpenG-Toolkit'
            ref: 'main'
            path: ${{env.DOCKERFILE_DIR}}
            sparse-checkout: |
                ${{env.DOCKERFILE}}
            sparse-checkout-cone-mode: false
        # move the dockerfile into location
      - run: mv "${DOCKERFILE_DIR}/${DOCKERFILE}" $DOCKERFILE

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ${{env.DOCKERFILE}}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_PROGRESS=plain
            LABVIEW_VERSION=${{ inputs.labview-version }}
            LABVIEW_BITNESS=${{ inputs.labview-bitness }}
            VIPC_TIMEOUT=${{ inputs.vipc_timeout_ms }}
            SOURCE_VIPC=${{ inputs.source_vipc }}
            DEV_VIPC=${{ inputs.dev_vipc }}
